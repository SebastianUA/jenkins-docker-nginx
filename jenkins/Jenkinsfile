#!groovy

pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh 'mkdir -p /home/vagrant/ && cd /home/vagrant && git clone https://github.com/SebastianUA/jenkins-docker-nginx.git'
                        sh 'bash /home/vagrant/jenkins-docker-nginx/scripts/install_utilites.sh'
                        sh '''
                            bash /home/vagrant/jenkins-docker-nginx/scripts/install_nginx_lua.sh
                        '''
                    }
                }
            }
        }
        stage('Dockerize') {
            steps {
                retry(3) {
                    sh '''
                        cd /home/vagrant && git clone https://github.com/SebastianUA/jenkins-docker-nginx.git'
                        time docker build -t centos7/nginx_lua -f /home/vagrant/jenkins-docker-nginx/docker/Dockerfile .
                        export DOCKER_ID_USER="captainua"
                        docker login -u $DOCKER_ID_USER
                        docker tag centos7/nginx_lua $DOCKER_ID_USER/nginx_lua
                        docker push centos7/nginx_lua
                    '''    
                }

                timeout(time: 3, unit: 'MINUTES') {
                    sh 'mkdir -p /home/vagrant/ && cd /home/vagrant && git clone https://github.com/SebastianUA/jenkins-docker-nginx.git'
                    sh 'bash /home/vagrant/jenkins-docker-nginx/scripts/install_utilites.sh'
                }
            }
        }
        stage('Deploy') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh '''
                            mkdir -p /home/vagrant/ && cd /home/vagrant && git clone https://github.com/SebastianUA/jenkins-docker-nginx.git
                            bash /home/vagrant/jenkins-docker-nginx/scripts/install_utilites.sh
                            export ACCESS_KEY="XXXXXXXXXX"
                            export SECRET_KEY="YYYYYYYYYY"
                            docker-machine create --driver amazonec2 --amazonec2-access-key $ACCESS_KEY --amazonec2-secret-key $SECRET_KEY  --amazonec2-open-port 80 --amazonec2-open-port 443 aws-nginx-lua
                        '''
                    }
                }
            }
        }
    }             
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}