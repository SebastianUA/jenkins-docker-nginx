Jenkinsfile (Declarative Pipeline)
pipeline {
    agent any
    stage('Build') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh 'mkdir -p /home/vagrant/ && cd /home/vagrant && git clone '
                        sh 'bash /home/vagrant/jenkins+docker+nginx/scripts/install_utilites.sh'
                        sh '''
                            echo "Multiline shell steps works too"
                            ls -lah
                        '''
                    }
                }
            }
        }
    stage('Dockerize') {
            steps {
                retry(3) {
                    sh './flakey-deploy.sh'
                }

                timeout(time: 3, unit: 'MINUTES') {
                    sh 'bash /home/vagrant/jenkins+docker+nginx/scripts/install_utilites.sh'
                }
            }
        }
    stage('Deploy') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh 'bash /home/vagrant/jenkins+docker+nginx/scripts/install_utilites.sh'
                    }
                }
            }
        }         
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}