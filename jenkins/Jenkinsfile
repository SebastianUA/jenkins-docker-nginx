#!groovy

pipeline {
    agent any
    environment {
        ENV = 'PROD'
    }
    stages {
        stage('Build') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh '''
                        cd ~
                        if [ -d '~/jenkins-docker-nginx' ]; then
                            git clone https://github.com/SebastianUA/jenkins-docker-nginx.git
                        fi
                        bash ~/jenkins-docker-nginx/scripts/install_utilites.sh
                        bash ~/jenkins-docker-nginx/scripts/install_nginx_lua.sh
                        '''
                    }
                }
            }
        }
        stage('Dockerize') {
            steps {
                retry(3) {
                    sh '''
                        cd ~
                        if [ -d "~/jenkins-docker-nginx" ]; then
                            git clone https://github.com/SebastianUA/jenkins-docker-nginx.git
                        fi
                        time docker build -t centos7/nginx_lua -f ~/jenkins-docker-nginx/docker/Dockerfile .
                        bash ~/jenkins-docker-nginx/scripts/deploy_image_to_dockerhub.sh -u DOCKER_ID_USER -p DOCKER_ID_USER_PASSWORD
                    '''    
                }

                timeout(time: 3, unit: 'MINUTES') {
                    sh '''
                        cd ~
                        if [ -d "~/jenkins-docker-nginx" ]; then
                            git clone https://github.com/SebastianUA/jenkins-docker-nginx.git
                        fi
                        bash ~/jenkins-docker-nginx/scripts/install_utilites.sh
                    '''   
                }
            }
        }
        stage('Deploy') {
            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    retry(5) {
                        sh '''
                            cd ~
                            if [ -d "~/jenkins-docker-nginx" ]; then
                                git clone https://github.com/SebastianUA/jenkins-docker-nginx.git
                            fi
                            bash ~/jenkins-docker-nginx/scripts/install_utilites.sh
                            bash ~/jenkins-docker-nginx/scripts/create_machine_in_ec2.sh -u DOCKER_ID_USER -a ACCESS_KEY_from_AWS -s SECRET_KEY_from_AWS      
                        '''
                    }
                }
            }
        }
    }             
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}